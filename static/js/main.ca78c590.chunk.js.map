{"version":3,"sources":["algorithms/clock.js","components/Home.js","components/Navbar.js","algorithms/graph/Prims.js","algorithms/graph/Travelling_Sales.js","algorithms/graph/main.js","components/Graph.js","algorithms/sorting/Bubble.js","algorithms/sorting/QuickSort.js","algorithms/sorting/Merge.js","algorithms/sorting/main.js","components/Sort.js","algorithms/pathfinding/Dijkstra.js","algorithms/pathfinding/A_star.js","algorithms/pathfinding/main.js","components/Pathfinding.js","App.js","index.js"],"names":["mapValue","inp","minInp","maxInp","minOut","maxOut","clock","p","setup","createCanvas","windowWidth","windowHeight","fullscreen","draw","background","translate","width","height","noFill","strokeWeight","date","Date","seconds","getUTCSeconds","minutes","getUTCMinutes","hours","getUTCHours","hourAngle","HALF_PI","PI","i","stroke","push","rotate","line","highlightSize","pop","minuteAngle","secondAngle","Home","props","home_sketch","React","createRef","this","p5","current","className","ref","Component","require","config","origin","process","Navbar","href","Prims","nodes","reached","unreached","length","splice","record","rIndex","uIndex","j","v1","v2","d","Math","sqrt","pow","Travelling_Sales","unvisited","visited","sort","elem1","elem2","winner","GraphAlgorithm","minY","maxY","reset","randomNodes","floor","random","forEach","node","execute","fill","color","circle","connection","mouseClicked","mouseY","mouseX","algorithm","Graph","graph_sketch","onClick","changeAlgorithm","Bubble","arr","swapping","swap","a","t","QuickSort","start","end","pivotIndex","partition","value","f","index1","index2","pivotValue","Merge","mid_index","leftGen","rightGen","max","left","min","right","concat","result","shift","SortingAlgorithm","widthMargin","speed","algorithm_in_process","count","createRandomArray","size","largerArray","smallerArray","refresh","temp","scale","x","next","Sort","sort_sketch","Dijkstra","w","h","queue","filter","dist","minNode","b","getNeighbours","neighbour","alt","previous","undefined","path","range","y","n","map","wall","A_star","openSet","inOpenSet","closedSet","cell","inClosedSet","includes","tentative_g","g","heuristic","Node","PathfindingAlgorithm","w_offset","h_offset","lastNode","reset_nodes","textFont","textSize","textAlign","CENTER","randomMap","rect","text","to_pixels","getNodeByPixels","mouseDragged","maxX","Pathfinding","pathfinding_sketch","App","component","exact","ReactDOM","render","document","getElementById"],"mappings":"4UAsGA,SAASA,EAASC,EAAKC,EAAQC,EAAQC,EAAQC,GAC7C,OAAY,IAARJ,EACKI,GAEAJ,EAAMC,IAAWC,EAASD,IAAYG,EAASD,GAAUA,EAGrDE,MA3GD,SAAAC,GASZA,EAAEC,MAAQ,WACRD,EAAEE,aAAaF,EAAEG,YAAaH,EAAEI,cAChCJ,EAAEK,cAGJL,EAAEM,KAAO,WACPN,EAAEO,WAAW,GACbP,EAAEQ,UAAUR,EAAES,MAAM,EAAGT,EAAEU,OAAO,GAEhCV,EAAEW,SACFX,EAAEY,aAZgB,IAuBlB,IATA,IAAIC,EAAO,IAAIC,KAEXC,EAAUF,EAAKG,gBACfC,EAAUJ,EAAKK,gBACfC,EAAQN,EAAKO,cAAgB,EAG7BC,EAAY5B,EAAS0B,EAAQ,GAAI,EAAG,IAAKnB,EAAEsB,QAAS,EAAEtB,EAAEuB,GAAKvB,EAAEsB,SAE1DE,EAAI,EAAGA,EAAI,GAAIA,IAClBL,EAAQ,IAAMK,EAChBxB,EAAEyB,OAAO,KAETzB,EAAEyB,OAAO,KAEXzB,EAAE0B,OACF1B,EAAE2B,OAAW,GAAJH,GAAUxB,EAAEuB,GAAK,MAC1BvB,EAAE4B,KAAK,GAAGC,IAA0B,GAAG,KACvC7B,EAAE8B,MAKJ,IADA,IAAIC,EAActC,EAASwB,EAAS,EAAG,IAAKjB,EAAEsB,QAAS,EAAEtB,EAAEuB,GAAKvB,EAAEsB,SACzDE,EAAI,EAAGA,EAAI,GAAIA,IAClBP,GAAWO,EACbxB,EAAEyB,OAAO,GAAI,IAAK,IAElBzB,EAAEyB,OAAO,GAAI,IAAK,IAEpBzB,EAAE0B,OACF1B,EAAE2B,OAAW,EAAJH,GAASxB,EAAEuB,GAAK,MACzBvB,EAAE4B,KAAK,GAAGC,IAA4B,GAAG,KACzC7B,EAAE8B,MAIJ,IADA,IAAIE,EAAcvC,EAASsB,EAAS,EAAG,IAAKf,EAAEsB,QAAS,EAAEtB,EAAEuB,GAAKvB,EAAEsB,SACzDE,EAAI,EAAGA,EAAI,GAAIA,IAClBT,GAAWS,EACbxB,EAAEyB,OAAO,IAAK,GAAI,IAElBzB,EAAEyB,OAAO,IAAK,GAAI,IAEpBzB,EAAE0B,OACF1B,EAAE2B,OAAW,EAAJH,GAASxB,EAAEuB,GAAK,MACzBvB,EAAE4B,KAAK,GAAGC,IAA4B,GAAG,KACzC7B,EAAE8B,MAIJ9B,EAAEY,aAAaiB,GAGf7B,EAAE0B,OACF1B,EAAEyB,OAAO,IAAK,GAAI,IAClBzB,EAAE2B,OAAOK,EAAchC,EAAEsB,SACzBtB,EAAE4B,KAAK,EAAG,EAAG,GAAK,KAClB5B,EAAE8B,MAGF9B,EAAE0B,OACF1B,EAAEyB,OAAO,GAAI,IAAK,IAClBzB,EAAE2B,OAAOI,EAAc/B,EAAEsB,SACzBtB,EAAE4B,KAAK,EAAG,EAAG,GAAK,KAClB5B,EAAE8B,MAGF9B,EAAE0B,OACF1B,EAAEyB,OAAO,KACTzB,EAAE2B,OAAON,EAAYrB,EAAEsB,SACvBtB,EAAE4B,KAAK,EAAG,EAAG,GAAK,IAClB5B,EAAE8B,MAEF9B,EAAEyB,OAAO,KACTzB,EAAE4B,KAAK,EAAG,EAAG,EAAG,K,eCvELK,E,kDAjBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,YAAcC,IAAMC,YAFV,E,qDAKnB,WACIC,KAAKC,GAAK,IAAIA,IAAGxC,EAAOuC,KAAKH,YAAYK,W,oBAG7C,WACI,OACI,qBAAKC,UAAU,SAASC,IAAKJ,KAAKH,kB,GAZ3BC,IAAMO,W,MCHzBC,EAAQ,IAAUC,SAElB,IAAMC,EAASC,+CAqBAC,E,4JAjBX,WACI,OACI,yBAAQP,UAAU,MAAlB,UACI,mBAAGQ,KAAMH,EAAO,IAAhB,kBACA,mBAAGG,KAAMH,EAAO,oBAAhB,8BACA,mBAAGG,KAAMH,EAAO,sBAAhB,gCACA,mBAAGG,KAAMH,EAAO,0BAAhB,oCACA,sBAAKL,UAAU,YAAf,UACI,mBAAGA,UAAU,SAASQ,KAAMH,EAAO,IAAnC,mBACA,mBAAGL,UAAU,SAASQ,KAAMH,EAAO,IAAnC,6B,GAXCV,IAAMO,W,MCsCZO,MA5Cf,SAAeC,GAKX,IAHA,IAAIC,EAAU,GACVC,EAAY,GAEP7B,EAAI,EAAGA,EAAI2B,EAAMG,OAAQ9B,IAC9B2B,EAAM3B,GAAN,MAAoB,QACpB6B,EAAU3B,KAAKyB,EAAM3B,IAMzB,IAHA4B,EAAQ1B,KAAK2B,EAAU,IACvBA,EAAUE,OAAO,EAAG,GAEbF,EAAUC,OAAS,GAAG,CAKzB,IAJA,IAAIE,EAAS,IACTC,EAAS,EACTC,EAAS,EAEJlC,EAAI,EAAGA,EAAI4B,EAAQE,OAAQ9B,IAChC,IAAK,IAAImC,EAAI,EAAGA,EAAIN,EAAUC,OAAQK,IAAK,CACvC,IAAIC,EAAKR,EAAQ5B,GACbqC,EAAKR,EAAUM,GAEfG,EAAIC,KAAKC,KAAMD,KAAKE,IAAIL,EAAE,EAAMC,EAAE,EAAO,GAAKE,KAAKE,IAAIL,EAAE,EAAQC,EAAE,EAAO,IAC1EC,EAAIN,IACJA,EAASM,EACTL,EAASjC,EACTkC,EAASC,GAMrBP,EAAQK,GAAR,YAA+B/B,KAAK2B,EAAUK,IAE9CN,EAAQ1B,KAAK2B,EAAUK,IACvBL,EAAUE,OAAOG,EAAQ,GAG7B,OAAON,GCCIc,MAxCf,SAA0Bf,GACtB,IAAIgB,EAAY,GACZC,EAAU,GAMd,GAJAjB,EAAMkB,MAAK,SAACC,EAAOC,GACf,OAAOA,EAAK,EAAQD,EAAK,KAGR,IAAjBnB,EAAMG,OACN,OAAOH,EAGX,IAAK,IAAI3B,EAAE,EAAGA,EAAE2B,EAAMG,OAAQ9B,IAC1B2C,EAAUzC,KAAKyB,EAAM3B,IAMzB,IAHA4C,EAAQ1C,KAAKyC,EAAUrC,OACvBsC,EAAQA,EAAQd,OAAO,GAAvB,MAAqC,QAE9Ba,EAAUb,OAAS,GAAG,CAKzB,IAJA,IAAIE,EAAS,IACTgB,EAAS,EACTV,OAAC,EACDtB,EAAU4B,EAAQA,EAAQd,OAAO,GAC5B9B,EAAE,EAAGA,EAAE2C,EAAUb,OAAQ9B,KAC9BsC,EAAIC,KAAKC,KAAMD,KAAKE,IAAIzB,EAAO,EAAQ2B,EAAU3C,GAAV,EAAmB,GAAKuC,KAAKE,IAAIzB,EAAO,EAAQ2B,EAAU3C,GAAV,EAAmB,KAClGgC,IACJA,EAASM,EACTU,EAAShD,GAGjBgB,EAAO,YAAgBd,KAAKyC,EAAUK,IACtCJ,EAAQ1C,KAAKyC,EAAUK,IACvBL,EAAUK,GAAV,MAA6B,QAC7BL,EAAUZ,OAAOiB,EAAQ,GAG7B,OADAJ,EAAQA,EAAQd,OAAO,GAAvB,MAAqC,MAC9Bc,GC2CIK,EAhFQ,SAAAzE,GAEtB,IAAImD,EAAQ,GAGNuB,EAAwB,IAAjB1E,EAAEI,aACTuE,EAAwB,IAAjB3E,EAAEI,aAEZJ,EAAEC,MAAQ,WACZD,EAAEE,aAAaF,EAAEG,YAAaH,EAAEI,eAK9BJ,EAAEM,KAAO,WAQX,GAPAN,EAAEO,WAAW,GAETP,EAAE4E,QACLzB,EAAQ,GACRnD,EAAE4E,OAAQ,GAGP5E,EAAE6E,YAAa,CAClB,IAAK,IAAIrD,EAAI,EAAGA,EAAE,GAAIA,IACrB2B,EAAMzB,KAAK,CACV,EAAKqC,KAAKe,MAAMf,KAAKgB,SAAW/E,EAAEG,aAClC,EAAK4D,KAAKe,MAAMf,KAAKgB,UAAYJ,EAAKD,GAAQA,GAC9C,YAAe,GACf,MAAS,MAGX1E,EAAE6E,aAAc,EAGb1B,EAAMG,OAAS,IAElBH,EAAM6B,SAAQ,SAAAC,GACbA,EAAI,YAAkB,MAGvBC,IAEA/B,EAAM6B,SAAQ,SAAAC,GACbjF,EAAEmF,KAAKnF,EAAEoF,MAAMH,EAAI,QACnBjF,EAAEqF,OAAOJ,EAAI,EAAOA,EAAI,EAxCd,IAyCVjF,EAAEyB,OAAO,KACTwD,EAAI,YAAgBD,SAAQ,SAAAM,GAC3BtF,EAAE4B,KAAKqD,EAAI,EAAOA,EAAI,EAAOK,EAAU,EAAOA,EAAU,WAM5DtF,EAAEuF,aAAe,WAGXZ,EAAO3E,EAAEwF,QAAUd,EAAO1E,EAAEwF,QAEhCrC,EAAMzB,KAAK,CACV,EAAK1B,EAAEyF,OACP,EAAKzF,EAAEwF,OACP,YAAe,GACf,MAAS,WAKZ,IAAMN,EAAU,WAEK,UAAhBlF,EAAE0F,UAELvC,EAAQD,EAAMC,GACY,qBAAhBnD,EAAE0F,YAEZvC,EAAQe,EAAiBf,MCpCbwC,E,kDAhCX,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IACD0D,aAAexD,IAAMC,YAFX,E,qDAKnB,WACIC,KAAKC,GAAK,IAAIA,IAAGkC,EAAgBnC,KAAKsD,aAAapD,SACnDF,KAAKC,GAAGmD,UAAY,O,6BAGxB,SAAgBA,GACZpD,KAAKC,GAAGmD,UAAYA,I,oBAGxB,WAAU,IAAD,OACL,OACI,gCACI,qBAAKjD,UAAU,SAASC,IAAKJ,KAAKsD,eAElC,yBAAQnD,UAAU,aAAlB,UACI,wBAAQoD,QAAS,kBAAM,EAAKC,gBAAgB,UAA5C,oBACA,wBAAQD,QAAS,kBAAM,EAAKC,gBAAgB,qBAA5C,oCACA,sBAAKrD,UAAU,mBAAf,UACI,wBAAQoD,QAAS,WAAO,EAAKtD,GAAGsC,aAAc,GAA9C,uBACA,wBAAQgB,QAAS,WAAO,EAAKtD,GAAGqC,OAAQ,GAAxC,gC,GAzBJxC,IAAMO,W,2BCNhBoD,GAAV,SAAUA,EAAOC,GAAjB,yEAIQC,GAAW,EACFzE,EAAE,EALnB,YAKsBA,EAAEwE,EAAI1C,QAL5B,sBAMgB0C,EAAIxE,GAAKwE,EAAIxE,EAAE,IAN/B,gBASgB,OAFAwE,EAAME,EAAKF,EAAKxE,EAAGA,EAAE,GACrByE,GAAY,EAR5B,SASsBD,EATtB,OAKoCxE,IALpC,0BAYayE,EAZb,wDAeA,SAASC,EAAKC,EAAG3E,EAAGmC,GAChB,IAAIyC,EAAID,EAAE3E,GAGV,OAFA2E,EAAE3E,GAAK2E,EAAExC,GACTwC,EAAExC,GAAKyC,EACAD,EAMIJ,Q,mBCzBLM,GAAV,SAAUA,EAAUL,EAAKM,EAAOC,GAAhC,wFACQD,GAASC,GADjB,iDAKQC,EAAaC,EAAUT,EAAKM,EAAOC,GAL3C,cAOsBF,EAAUL,EAAKM,EAAOE,EAAW,IAPvD,yDAQQ,OADKE,EAPb,kBAQcA,EARd,sHAAAC,IAAA,mCAUsBN,EAAUL,EAAKQ,EAAW,EAAGD,IAVnD,2DAWQ,OADKG,EAVb,kBAWcA,EAXd,wHAAAC,IAAA,qBAaI,OAbJ,UAaUX,EAbV,0EAkBA,SAASE,EAAKF,EAAKY,EAAQC,GACvB,IAAIT,EAAIJ,EAAIY,GAGZ,OAFAZ,EAAIY,GAAUZ,EAAIa,GAClBb,EAAIa,GAAUT,EACPJ,EAGX,SAASS,EAAUT,EAAKM,EAAOC,GAG3B,IAFA,IAAIC,EAAaF,EACbQ,EAAad,EAAIO,GACZ/E,EAAI8E,EAAO9E,EAAI+E,EAAK/E,IACrBwE,EAAIxE,GAAKsF,IACTd,EAAME,EAAKF,EAAKxE,EAAGgF,GACnBA,KAIR,OADAR,EAAME,EAAKF,EAAKQ,EAAYD,GACrBC,EAGIH,Q,mBCtCLU,GAAV,SAAUA,EAAMf,GAAhB,sFACuB,IAAfA,EAAI1C,OADZ,gBAEQ,OAFR,SAEc0C,EAFd,wCAMQgB,EAAYjD,KAAKe,MAAMkB,EAAI1C,OAAO,GAElC2D,EARR,YAQsBF,EAAM,YAAIf,GAAKzC,OAAO,EAAGyD,KACvCE,EATR,YASuBH,EAAM,YAAIf,GAAKzC,OAAOyD,KAIhCxF,EAAE,EAbf,YAakBA,EAAEuC,KAAKoD,IAAIF,EAAQ3D,OAAQ4D,EAAS5D,SAbtD,iBAgBQ,OAFA8D,EAAOH,EAAQlD,KAAKsD,IAAI7F,EAAGyF,EAAQ3D,OAAO,IAC1CgE,EAAQJ,EAASnD,KAAKsD,IAAI7F,EAAG0F,EAAS5D,OAAO,IAfrD,UAgBc8D,EAAKG,OAAOD,GAhB1B,QAa+D9F,IAb/D,uBAoBI,IADIgG,EAAS,GACNJ,EAAK9D,OAAS,GAAKgE,EAAMhE,OAAS,GACjC8D,EAAK,GAAKE,EAAM,GAChBE,EAAO9F,KAAK0F,EAAKK,SAEjBD,EAAO9F,KAAK4F,EAAMG,SAM1B,OADAD,GADAA,EAASA,EAAOD,OAAOH,IACPG,OAAOD,GA7B3B,UA8BUE,EA9BV,wCAiCeT,QCiEAW,EAjGU,SAAA1H,GAErB,IACG0E,EAAwB,IAAjB1E,EAAEI,aACNuE,EAAwB,IAAjB3E,EAAEI,aACTuH,EAA8B,GAAhB3H,EAAEG,YAChBM,EAAQT,EAAEG,YAA4B,EAAdwH,EAC9B3H,EAAE4H,MAAQ,KACV,IAIIC,EAJAC,EAAQ,EAER9B,EAAM+B,EADW,KAmErB,SAASA,EAAkBC,GACvBhC,EAAM,GACN,IAAK,IAAIxE,EAAE,EAAGA,EAAEwG,EAAMxG,IAClBwE,EAAItE,KAAKqC,KAAKe,MAAMf,KAAKgB,UAAYJ,EAAKD,KAE9C,OAAOsB,EAnEXhG,EAAEC,MAAQ,WACND,EAAEE,aAAaF,EAAEG,YAAaH,EAAEI,cAChC8E,KAGJlF,EAAEM,KAAO,WACXN,EAAEO,WAAW,GAETP,EAAE4E,QACIoB,EAAM+B,EAdO,KAebF,EAAuB,KAChC7H,EAAE4E,OAAQ,GAGP5E,EAAEiI,cACIjC,EAAM+B,EAAkB/B,EAAI1C,OA3BrB,IA4BPuE,EAAuB,KAChC7H,EAAEiI,aAAc,GAEPjI,EAAEkI,eACFlC,EAAM+B,EAAkBhE,KAAKoD,IAAI,GAAInB,EAAI1C,OAhClC,KAiCPuE,EAAuB,KAChC7H,EAAEkI,cAAe,GAGRlI,EAAEmI,UAC0B,MAAxBN,IACA7B,EAAM+B,EAAkB/B,EAAI1C,SAEhC4B,IACAlF,EAAEmI,SAAU,GAGhB,IAQIC,EARAC,EAAQ5H,EAAMuF,EAAI1C,OACtBtD,EAAEY,aAAayH,GACfrI,EAAEyB,OAAO,KACT,IAAK,IAAID,EAAE,EAAGA,EAAEwE,EAAI1C,OAAQ9B,IAAK,CAC7B,IAAI8G,EAAI9G,EAAE6G,EAAMV,EAChB3H,EAAE4B,KAAK0G,EAAGtC,EAAIxE,GAAGkD,EAAM4D,EAAG3D,GAI9B,GAA4B,MAAxBkD,EAGA,IADAC,GAAS9H,EAAE4H,MACJE,GAAO,GAAG,CAEb,GAAY,OADZM,EAAOP,EAAqBU,OAAO7B,OAG5B,CACHmB,EAAuB,KACvB,MAHA7B,EAAMoC,EAKVN,MAiBf,IAAM5C,EAAU,WAEK,WAAhBlF,EAAE0F,UACLmC,EAAuB9B,EAAOC,GACE,cAAhBhG,EAAE0F,UACTmC,EAAuBxB,EAAUL,EAAK,EAAGA,EAAI1C,OAAO,GAC7B,UAAhBtD,EAAE0F,YACTmC,EAAuBd,EAAMf,MChD1BwC,E,kDArCX,WAAYtG,GAAQ,IAAD,8BACf,cAAMA,IACDuG,YAAcrG,IAAMC,YAFV,E,qDAKnB,WACIC,KAAKC,GAAK,IAAIA,IAAGmF,EAAkBpF,KAAKmG,YAAYjG,SACpDF,KAAKC,GAAGmD,UAAY,O,6BAGxB,SAAgBA,GACZpD,KAAKC,GAAG4F,SAAU,EAClB7F,KAAKC,GAAGmD,UAAYA,I,oBAGxB,WAAU,IAAD,OACL,OACI,gCACI,qBAAKjD,UAAU,SAASC,IAAKJ,KAAKmG,cAElC,yBAAQhG,UAAU,aAAlB,UACI,wBAAQoD,QAAS,kBAAM,EAAKC,gBAAgB,WAA5C,yBACA,wBAAQD,QAAS,kBAAM,EAAKC,gBAAgB,cAA5C,wBACA,wBAAQD,QAAS,kBAAM,EAAKC,gBAAgB,UAA5C,wBACA,sBAAKrD,UAAU,mBAAf,UACI,wBAAQoD,QAAS,WAAO,EAAKtD,GAAGqF,MAAwB,EAAhB,EAAKrF,GAAGqF,OAAhD,gBACA,wBAAQ/B,QAAS,WAAO,EAAKtD,GAAGqF,MAAQ7D,KAAKoD,IAAI,IAAsB,GAAhB,EAAK5E,GAAGqF,QAA/D,iBACA,wBAAQ/B,QAAS,WAAO,EAAKtD,GAAG2F,cAAe,GAA/C,oBACA,wBAAQrC,QAAS,WAAO,EAAKtD,GAAG0F,aAAc,GAA9C,kBACA,wBAAQpC,QAAS,WAAO,EAAKtD,GAAGqC,OAAQ,GAAxC,gC,GA9BLxC,IAAMO,W,WCPf+F,GAAV,SAAUA,EAASvF,EAAOwF,EAAGC,GAA7B,yFAEI,IADIC,EAAQ,GACHrH,EAAE,EAAGA,EAAE2B,EAAMG,OAAQ9B,IAC1BqH,EAAMnH,KAAKyB,EAAM3B,IAGjB8E,EAAQnD,EAAM2F,QAAO,SAAA7D,GAAI,OAAIA,EAAKqB,SAAO,GACzCC,EAAMpD,EAAM2F,QAAO,SAAA7D,GAAI,OAAIA,EAAKsB,OAAK,GACzCD,EAAMyC,KAAO,EARjB,YAUWF,EAAMvF,OAAS,GAV1B,qBAWY0F,EAAU,YAAIH,GAAOxE,MAAK,SAAC8B,EAAG8C,GAAJ,OAAU9C,EAAE4C,KAAOE,EAAEF,QAAM,MACzCxC,EAZxB,mDAcQsC,EAAQA,EAAMC,QAAO,SAAA7D,GAAI,OAAIA,GAAQ+D,KAd7C,cAgB8BE,EAAc/F,EAAO6F,EAASL,EAAGC,IAhB/D,2DAsBY,OANKO,EAhBjB,SAiBgBC,EAAMJ,EAAQD,KAAO,GACfI,EAAUJ,OAChBI,EAAUJ,KAAOK,EACjBD,EAAUE,SAAWL,GApBrC,UAsBkB7F,EAtBlB,wHAAAwD,IAAA,4CAyBI,OAzBJ,UAyBUxD,EAzBV,QA2BQoF,EAAOhC,EA3Bf,gBA4B6B+C,IAAlBf,EAAKc,SA5BhB,iBA+BQ,OAFAd,EAAKgB,MAAO,EACZhB,EAAOA,EAAKc,SA9BpB,UA+BclG,EA/Bd,qFAmCA,SAAS+F,EAAc/F,EAAO8B,EAAM0D,EAAGC,GACnC,IAAMY,EAAQ,SAAClB,EAAGmB,GAAQ,OAAO,GAAKnB,GAAKA,EAAIK,GAAK,GAAKc,GAAKA,EAAIb,GAElE,MADiB,CAAC,CAAC3D,EAAKzD,EAAE,EAAGyD,EAAKtB,GAAI,CAACsB,EAAKzD,EAAE,EAAGyD,EAAKtB,GAAI,CAACsB,EAAKzD,EAAGyD,EAAKtB,EAAE,GAAI,CAACsB,EAAKzD,EAAGyD,EAAKtB,EAAE,IAC5EmF,QAAO,SAAAY,GAAC,OAAIF,EAAK,WAAL,cAASE,OAAIC,KAAI,SAAAD,GAAC,OAAIvG,EAAMuG,EAAE,GAAGd,EAAEc,EAAE,OAAKZ,QAAO,SAAAY,GAAC,OAAKA,EAAEE,QAG5ElB,Q,WCvCLmB,GAAV,SAAUA,EAAO1G,EAAOwF,EAAGC,GAA3B,gGAEQkB,EAAU3G,EAAM2F,QAAO,SAAA7D,GAAI,OAAIA,EAAKqB,UAChC,GAAGyD,WAAY,EACnBC,EAAY,GACZzD,EAAMpD,EAAM2F,QAAO,SAAA7D,GAAI,OAAIA,EAAKsB,OAAK,GAL7C,YAOWuD,EAAQxG,OAAS,GAP5B,iBAUQ,IADIkB,EAAS,EACJhD,EAAI,EAAGA,EAAIsI,EAAQxG,OAAQ9B,IAC5BsI,EAAQtI,GAAGmF,EAAImD,EAAQtF,GAAQmC,IAC/BnC,EAAShD,GAZzB,IAgBYgB,EAAUsH,EAAQtF,MAEN+B,EAlBxB,iBAoBY,IADI0D,EAAOzH,EACJyH,EAAKZ,UACRY,EAAKV,MAAO,EACZU,EAAOA,EAAKZ,SAtB5B,OAwBYlG,EAAQA,EAAMwG,KAAI,SAAA1E,GAGd,OAFAA,EAAK8E,WAAY,EACjB9E,EAAKiF,aAAc,EACZjF,KA3BvB,kBA6BmB9B,GA7BnB,QAiCQ2G,EAAUA,EAAQhB,QAAO,SAAA7D,GAAI,OAAIA,IAASzC,KAC1CwH,EAAUtI,KAAKc,GACfA,EAAQuH,WAAY,EACpBvH,EAAQ0H,aAAc,EApC9B,cAsC8BhB,EAAc/F,EAAOX,EAASmG,EAAGC,IAtC/D,8DAsCiBO,EAtCjB,SAwCgBa,EAAUG,SAAShB,KAAcA,EAAUS,KAxC3D,wDAgEY,OApBIQ,EAAc5H,EAAQ6H,EAAI,EAC1BP,EAAQK,SAAShB,GACbiB,EAAcjB,EAAUkB,IACxBlB,EAAUkB,EAAID,IAGlBjB,EAAUkB,EAAID,EACdjB,EAAUY,WAAY,EACtBD,EAAQpI,KAAKyH,IAGXhD,EAAI,CAACgD,EAAU3H,EAAG2H,EAAUxF,GAC5BsF,EAAI,CAAC1C,EAAI/E,EAAG+E,EAAI5C,GAEtBwF,EAAUP,EAAI0B,EAAUnE,EAAG8C,GAE3BE,EAAUxC,EAAIwC,EAAUkB,EAAIlB,EAAUP,EAEtCO,EAAUE,SAAW7G,EA9DjC,UAgEkBsH,EAAQvC,OAAOyC,GAAWzC,OAAOpE,EAAM2F,QAAO,SAAA7D,GAAI,OAAK6E,EAAQK,SAASlF,KAAU+E,EAAUG,SAASlF,OAAQZ,MAAK,SAAC8B,EAAG8C,GACxH,OAAQ9C,EAAExC,EAAIwC,EAAE3E,EAAE,KAASyH,EAAEtF,EAAEsF,EAAEzH,EAAE,QAjEnD,wHAAAmF,IAAA,qEAsEW,MAtEX,6DA0EA,SAAS2D,EAAUnE,EAAE8C,GACjB,IAAIX,EAAInC,EAAE,GAAK8C,EAAE,GACbQ,EAAItD,EAAE,GAAK8C,EAAE,GACjB,OAAOlF,KAAKE,IAAIqE,EAAEA,EAAImB,EAAEA,EAAG,IAG/B,SAASP,EAAc/F,EAAO8B,EAAM0D,EAAGC,GACnC,IAAMY,EAAQ,SAAClB,EAAGmB,GAAQ,OAAO,GAAKnB,GAAKA,EAAIK,GAAK,GAAKc,GAAKA,EAAIb,GAElE,MADiB,CAAC,CAAC3D,EAAKzD,EAAE,EAAGyD,EAAKtB,GAAI,CAACsB,EAAKzD,EAAE,EAAGyD,EAAKtB,GAAI,CAACsB,EAAKzD,EAAGyD,EAAKtB,EAAE,GAAI,CAACsB,EAAKzD,EAAGyD,EAAKtB,EAAE,IAC5EmF,QAAO,SAAAY,GAAC,OAAIF,EAAK,WAAL,cAASE,OAAIC,KAAI,SAAAD,GAAC,OAAIvG,EAAMuG,EAAE,GAAGd,EAAEc,EAAE,OAAKZ,QAAO,SAAAY,GAAC,OAAKA,EAAEE,QAG5EC,QCwDTU,EAAO,SAAC/I,EAAGmC,EAAG2E,EAAGmB,GACnB,MAAO,CACHjI,EAAGA,EACHmC,EAAGA,EACH2E,EAAGA,EACHmB,EAAGA,EAEHG,MAAM,EACNtD,OAAO,EACPC,KAAK,EAELnC,SAAS,EACTmF,MAAM,EACNF,UAAU,EACVN,KAAM,IAENsB,EAAG,EACHzB,EAAG,EACHjC,EAAG,EACHoD,WAAW,EACXG,aAAa,IAINM,EAtKc,SAAAxK,GAE5B,IAUOyK,EAAUC,EAVbvH,EAAQ,GACNuB,EAAwB,IAAjB1E,EAAEI,aACNuE,EAAwB,IAAjB3E,EAAEI,aACTuH,EAA8B,IAAhB3H,EAAEG,YAChBM,EAAQT,EAAEG,YAA4B,EAAdwH,EAGxBgB,EAAI5E,KAAKe,MAAM9E,EAAEG,YADb,IAEJyI,EAAI7E,KAAKe,MAAM9E,EAAEI,aAFb,IAMNuK,EAAW,KAEf3K,EAAE4H,MAAQ,GACV,IAAIE,EAAQ,EACRD,EAAuB,KAG3B7H,EAAEC,MAAQ,WACZD,EAAEE,aAAaF,EAAEG,YAAaH,EAAEI,cAC1BqK,EAAWhK,EAAMkI,EACjB+B,GAAY/F,EAAKD,GAAMkE,EACvBgC,IACA5K,EAAE6K,SAAS,aACX7K,EAAE8K,SAAS,IACX9K,EAAE+K,UAAU/K,EAAEgL,OAAQhL,EAAEgL,SAG5BhL,EAAEM,KAAO,WAqBD,IAAI8H,EADR,GAnBNpI,EAAEO,WAAW,GAETP,EAAE4E,QACIzB,EAAQyH,IACR5K,EAAE0F,UAAY,KACdR,IACTlF,EAAE4E,OAAQ,GAGP5E,EAAEiL,YACLjL,EAAEiL,WAAY,GAGLjL,EAAEmI,UACFjD,IACAlF,EAAEmI,SAAU,GAIY,MAAxBN,EAGA,IADAC,GAAS9H,EAAE4H,MACJE,GAAO,GAAG,CAEb,GAAY,OADZM,EAAOP,EAAqBU,OAAO7B,OAG5B,CACHmB,EAAuB,KACvB,MAHA1E,EAAQiF,EAKZN,IA/BG,oBAoCM3E,GApCN,IAoCX,2BAAwB,CAAC,IAAhB8B,EAAe,QAEpBjF,EAAEmF,KAAKnF,EAAEoF,MAAM,UACXH,EAAK2E,KACL5J,EAAEmF,KAAKnF,EAAEoF,MAAM,UACRH,EAAKqB,MACZtG,EAAEmF,KAAKnF,EAAEoF,MAAM,UACRH,EAAKsB,IACZvG,EAAEmF,KAAKnF,EAAEoF,MAAM,QACRH,EAAKsE,KACZvJ,EAAEmF,KAAKnF,EAAEoF,MAAM,SACQ,WAAhBpF,EAAE0F,YACLT,EAAK8E,UACL/J,EAAEmF,KAAKnF,EAAEoF,MAAM,UACRH,EAAKiF,aACZlK,EAAEmF,KAAKnF,EAAEoF,MAAM,SAIvBpF,EAAEkL,KAAKjG,EAAKqD,EAAEX,EAAa1C,EAAKwE,EAAE/E,EAAM+F,EAAUC,GAC9B,aAAhB1K,EAAE0F,WAA0C,MAAdT,EAAK8D,OACnC/I,EAAEmF,KAAK,KACPnF,EAAEmL,KAAKlG,EAAK8D,KAAM9D,EAAKqD,EAAEX,EAAY8C,EAAS,EAAGxF,EAAKwE,EAAE/E,EAAKgG,EAAS,KA1DnE,gCAgEf,IAAME,EAAc,WAChBzH,EAAQ,GACR,IAAK,IAAI3B,EAAE,EAAGA,EAAEmH,EAAGnH,IACjB,IAAK,IAAImC,EAAE,EAAGA,EAAEiF,EAAGjF,IACjBR,EAAMzB,KAAK6I,EAAK/I,EAAGmC,EAAGyH,EAAU5J,EAAGmH,EAAGlI,GAAQ2K,EAAUzH,EAAGiF,EAAGjE,EAAKD,KAMvE,OAHAvB,EAAMY,KAAKe,MAAQ,GAAF6D,GAAOC,EAAE7E,KAAKe,MAAQ,GAAF8D,IAAQtC,OAAQ,EACrDnD,EAAMY,KAAKe,MAAQ,GAAF6D,GAAOC,EAAE7E,KAAKe,MAAQ,GAAF8D,IAAQrC,KAAM,EAE5CpD,GAGdnD,EAAEuF,aAAe,WAChB,IAAIN,EAAOoG,EAAgBrL,EAAEyF,OAAOgF,EAAUzK,EAAEwF,OAAOkF,QACpCpB,IAATrE,GAAsBA,EAAKqB,OAASrB,EAAKsB,MAC7CtB,EAAK2E,MAAQ3E,EAAK2E,KAClBe,EAAW1F,IAGfjF,EAAEsL,aAAe,WACb,IAAIrG,EAAOoG,EAAgBrL,EAAEyF,OAAOgF,EAAUzK,EAAEwF,OAAOkF,QAC1CpB,IAATrE,GAAsBA,EAAKqB,OAASrB,EAAKsB,KACzCtB,IAAS0F,IACT1F,EAAK2E,MAAQ3E,EAAK2E,KAClBe,EAAW1F,IAInB,IAAMoG,EAAkB,SAAC/C,EAAGmB,GAAJ,OAAUtG,EAAM2F,QAAO,SAAA7D,GAAI,OAAIqD,EAAEX,GAAe1C,EAAKqD,GAAKrD,EAAKqD,EAAIA,EAAEX,EAAY8C,GAAYhB,EAAE/E,GAAQO,EAAKwE,GAAKxE,EAAKwE,EAAIA,EAAE/E,EAAKgG,KAAU,IAE7JU,EAAY,SAAC9C,EAAGiD,EAAMpE,GAAV,OAAkBmB,EAAEiD,EAAOpE,GAG1CjC,EAAU,WAGd2C,EADmB,aAAhB7H,EAAE0F,UACkBgD,EAASvF,EAAOwF,EAAGC,GACV,WAAhB5I,EAAE0F,UACcmE,EAAO1G,EAAOwF,EAAGC,GAEjB,OChGpB4C,G,kDAlCX,WAAYtJ,GAAQ,IAAD,8BACf,cAAMA,IACDuJ,mBAAqBrJ,IAAMC,YAFjB,E,qDAKnB,WACIC,KAAKC,GAAK,IAAIA,IAAGiI,EAAsBlI,KAAKmJ,mBAAmBjJ,SAC/DF,KAAKC,GAAGmD,UAAY,O,6BAGxB,SAAgBA,GACZpD,KAAKC,GAAG4F,SAAU,EAClB7F,KAAKC,GAAGmD,UAAYA,I,oBAGxB,WAAU,IAAD,OACL,OACI,gCACI,qBAAKjD,UAAU,SAASC,IAAKJ,KAAKmJ,qBAElC,yBAAQhJ,UAAU,aAAlB,UACI,wBAAQoD,QAAS,kBAAM,EAAKC,gBAAgB,aAA5C,sBACA,wBAAQD,QAAS,kBAAM,EAAKC,gBAAgB,WAA5C,gBACA,sBAAKrD,UAAU,mBAAf,UACI,wBAAQoD,QAAS,WAAO,EAAKtD,GAAGqF,MAAwB,EAAhB,EAAKrF,GAAGqF,OAAhD,gBACA,wBAAQ/B,QAAS,WAAO,EAAKtD,GAAGqF,MAAQ7D,KAAKoD,IAAI,EAAmB,GAAhB,EAAK5E,GAAGqF,QAA5D,iBACA,wBAAQ/B,QAAS,WAAO,EAAKtD,GAAGqC,OAAQ,GAAxC,gC,GA3BExC,IAAMO,WCgBjB+I,OAhBf,WACC,OACC,qBAAKjJ,UAAU,MAAf,SACC,eAAC,IAAD,WACC,cAAC,EAAD,IACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAO8G,KAAK,sBAAsBoC,UAAW,kBAAM,cAAC,EAAD,OACnD,cAAC,IAAD,CAAOpC,KAAK,oBAAoBoC,UAAW,kBAAM,cAAC,EAAD,OACjD,cAAC,IAAD,CAAOpC,KAAK,0BAA0BoC,UAAW,kBAAM,cAAC,GAAD,OACvD,cAAC,IAAD,CAAOC,OAAK,EAACrC,KAAK,IAAIoC,UAAW,kBAAM,cAAC,EAAD,gBCX5CE,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ca78c590.chunk.js","sourcesContent":["\n\nconst clock = p => {\n  var sizeChange = 50;\n\n  var secondSize = 400;\n  var minuteSize = secondSize - sizeChange;\n  var hourSize = minuteSize - sizeChange;\n\n  var highlightSize = 10;\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    p.fullscreen();\n  }\n\n  p.draw = () => {\n    p.background(0);\n    p.translate(p.width/2, p.height/2);\n    \n    p.noFill();\n    p.strokeWeight(highlightSize);\n\n    var date = new Date();\n\n    var seconds = date.getUTCSeconds();\n    var minutes = date.getUTCMinutes();\n    var hours = date.getUTCHours() + 1;\n\n    //Rings\n    var hourAngle = mapValue(hours % 12, 0, 12, -p.HALF_PI, 2*p.PI - p.HALF_PI);\n    \n    for (let i = 0; i < 12; i++) {\n      if (hours % 12 >= i) {\n        p.stroke(255);\n      } else {\n        p.stroke(105);\n      }\n      p.push();\n      p.rotate(i * 30 * (p.PI / 180) );\n      p.line(0, highlightSize-hourSize/2, 0, - hourSize/2);\n      p.pop();\n    }\n    \n\n    var minuteAngle = mapValue(minutes, 0, 60, -p.HALF_PI, 2*p.PI - p.HALF_PI);\n    for (let i = 0; i < 60; i++) {\n      if (minutes >= i) {\n        p.stroke(34, 181, 74);\n      } else {\n        p.stroke(34, 100, 40);\n      }\n      p.push();\n      p.rotate(i * 6 * (p.PI / 180) );\n      p.line(0, highlightSize-minuteSize/2, 0, - minuteSize/2);\n      p.pop();\n    }\n\n    var secondAngle = mapValue(seconds, 0, 60, -p.HALF_PI, 2*p.PI - p.HALF_PI);\n    for (let i = 0; i < 60; i++) {\n      if (seconds >= i) {\n        p.stroke(207, 37, 37);\n      } else {\n        p.stroke(150, 37, 37);\n      }\n      p.push();\n      p.rotate(i * 6 * (p.PI / 180) );\n      p.line(0, highlightSize-secondSize/2, 0, - secondSize/2);\n      p.pop();\n    } \n\n    //Hands\n    p.strokeWeight(highlightSize/2);\n\n    //Second Hand\n    p.push();\n    p.stroke(207, 37, 37);\n    p.rotate(secondAngle + p.HALF_PI);\n    p.line(0, 0, 0, - 125);\n    p.pop();\n\n    //Minute Hand\n    p.push();\n    p.stroke(34, 181, 74);\n    p.rotate(minuteAngle + p.HALF_PI);\n    p.line(0, 0, 0, - 100);\n    p.pop();\n\n    //Hour hand\n    p.push();\n    p.stroke(255);\n    p.rotate(hourAngle + p.HALF_PI);\n    p.line(0, 0, 0, - 75);\n    p.pop();\n    \n    p.stroke(255);\n    p.line(0, 0, 0, 0);\n\n  }\n\n}\n\nfunction mapValue(inp, minInp, maxInp, minOut, maxOut) {\n  if (inp === 0) {\n    return maxOut;\n  }\n  return ((inp - minInp) / (maxInp - minInp)) * (maxOut - minOut) + minOut;\n}\n\nexport default clock;","import React from \"react\";\n//import useScript from \"../hooks/useScript\";\nimport p5 from \"p5\";\nimport clock from \"../algorithms/clock\"\n\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.home_sketch = React.createRef();\n    }\n\n    componentDidMount() {\n        this.p5 = new p5(clock, this.home_sketch.current);\n    }\n\n    render() {\n        return (\n            <div className=\"sketch\" ref={this.home_sketch}>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\n\nimport \"./Navbar.css\";\n\nrequire(\"dotenv\").config();\n\nconst origin = process.env.REACT_APP_ORIGIN;//\"https://ogreenwood672.github.io/algorithms/#\"http://localhost:3000/algorithms/#\n\nclass Navbar extends React.Component {\n\n    render() {\n        return (\n            <header className=\"Nav\">\n                <a href={origin+\"/\"}>Home</a>\n                <a href={origin+\"/graph_algorithms\"}>Graph Algorithms</a>\n                <a href={origin+\"/sorting_algorithms\"}>Sorting Algorithms</a>\n                <a href={origin+\"/pathfinding_algorithms\"}>Pathfinding Algorithms</a>\n                <div className=\"Nav-right\">\n                    <a className=\"button\" href={origin+\"/\"}>About</a>\n                    <a className=\"button\" href={origin+\"/\"}>Other</a>\n                </div>\n            </header>\n        )\n    } \n\n}\n\nexport default Navbar","\n\nfunction Prims(nodes) {\n\n    var reached = []\n    var unreached = []\n    \n    for (let i = 0; i < nodes.length; i++) {\n        nodes[i][\"color\"] = \"white\";\n        unreached.push(nodes[i]);\n    }\n  \n    reached.push(unreached[0]);\n    unreached.splice(0, 1);\n      \n    while (unreached.length > 0) {\n        let record = 10000;\n        var rIndex = 0;\n        var uIndex = 0;\n        \n        for (let i = 0; i < reached.length; i++) {\n            for (let j = 0; j < unreached.length; j++) {\n                let v1 = reached[i];\n                let v2 = unreached[j];\n                \n                let d = Math.sqrt( Math.pow(v1[\"x\"]-v2[\"x\"], 2) + Math.pow(v1[\"y\"] - v2[\"y\"], 2) )\n                if (d < record) {\n                    record = d;\n                    rIndex = i;\n                    uIndex = j;\n                }\n            \n            }\n        }\n        \n        reached[rIndex][\"connections\"].push(unreached[uIndex]);\n      \n        reached.push(unreached[uIndex]);\n        unreached.splice(uIndex, 1);\n    }\n\n    return reached;\n}\n\n\n\nexport default Prims;","\n\nfunction Travelling_Sales(nodes) {\n    var unvisited = [];\n    var visited = [];\n\n    nodes.sort((elem1, elem2) => {\n        return elem2[\"x\"] - elem1[\"x\"];\n    })\n\n    if (nodes.length === 0) {\n        return nodes;\n    }\n\n    for (let i=0; i<nodes.length; i++) {\n        unvisited.push(nodes[i]);\n    }\n\n    visited.push(unvisited.pop());\n    visited[visited.length-1][\"color\"] = \"green\";\n\n    while (unvisited.length > 0) {\n        var record = 100000;\n        var winner = 0;\n        let d;\n        var current = visited[visited.length-1];\n        for (let i=0; i<unvisited.length; i++) {\n            d = Math.sqrt( Math.pow(current[\"x\"] - unvisited[i][\"x\"], 2) + Math.pow(current[\"y\"] - unvisited[i][\"y\"], 2));\n            if (d < record) {\n                record = d;\n                winner = i;\n            }\n        }\n        current[\"connections\"].push(unvisited[winner]);\n        visited.push(unvisited[winner])\n        unvisited[winner][\"color\"] = \"white\";\n        unvisited.splice(winner, 1);\n    }\n    visited[visited.length-1][\"color\"] = \"red\";\n    return visited;\n}\n\nexport default Travelling_Sales;","import { Prims, Travelling_Sales } from \"../graph\"\n\nconst GraphAlgorithm = p => {\n\n\tvar nodes = [];\n\tlet tool = \"node\";\n\tlet radius = 20;\n\tconst minY = p.windowHeight * 0.12;\n\tconst maxY = p.windowHeight * 0.89;\n  \n    p.setup = () => {\n\t\tp.createCanvas(p.windowWidth, p.windowHeight);\n\n\n    }\n  \n    p.draw = () => {\n\t\tp.background(0);\n\n\t\tif (p.reset) {\n\t\t\tnodes = [];\n\t\t\tp.reset = false;\n\t\t}\n\n\t\tif (p.randomNodes) {\n\t\t\tfor (let i = 0; i<10; i++) {\n\t\t\t\tnodes.push({\n\t\t\t\t\t\"x\": Math.floor(Math.random() * p.windowWidth),\n\t\t\t\t\t\"y\": Math.floor(Math.random() * (maxY-minY) + minY),\n\t\t\t\t\t\"connections\": [],\n\t\t\t\t\t\"color\": 255,\n\t\t\t\t})\n\t\t\t}\n\t\t\tp.randomNodes = false;\n\t\t}\n\n\t\tif (nodes.length > 0) {\n\n\t\t\tnodes.forEach(node => {\n\t\t\t\tnode[\"connections\"] = [];\n\t\t\t})\n\t\t\t\n\t\t\texecute();\n\n\t\t\tnodes.forEach(node => {\n\t\t\t\tp.fill(p.color(node[\"color\"]));\n\t\t\t\tp.circle(node[\"x\"], node[\"y\"], radius);\n\t\t\t\tp.stroke(255);\n\t\t\t\tnode[\"connections\"].forEach(connection => {\n\t\t\t\t\tp.line(node[\"x\"], node[\"y\"], connection[\"x\"], connection[\"y\"]);\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\t}\n\n\tp.mouseClicked = () => {\n\t\tif (tool === \"node\") {\n\n\t\t\tif (maxY < p.mouseY || minY > p.mouseY) { return }\n\n\t\t\tnodes.push({\n\t\t\t\t\"x\": p.mouseX,\n\t\t\t\t\"y\": p.mouseY,\n\t\t\t\t\"connections\": [],\n\t\t\t\t\"color\": \"white\",\n\t\t\t})\n\t\t}\n\t}\n\n\tconst execute = () => {\n\n\t\tif (p.algorithm === \"prims\") {\n\t\t\n\t\t\tnodes = Prims(nodes);\n\t\t} else if (p.algorithm === \"travelling_sales\") {\n\t\t\n\t\t\tnodes = Travelling_Sales(nodes);\n\t\t}\n\n\t}\n}\n\nexport default GraphAlgorithm;","import React from \"react\";\nimport p5 from \"p5\";\n\nimport \"./algorithm_selection.css\";\n\nimport GraphAlgorithm from \"../algorithms/graph/main\"\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.graph_sketch = React.createRef();\n    }\n\n    componentDidMount() {\n        this.p5 = new p5(GraphAlgorithm, this.graph_sketch.current);\n        this.p5.algorithm = null;\n    }\n\n    changeAlgorithm(algorithm) {\n        this.p5.algorithm = algorithm;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"sketch\" ref={this.graph_sketch}>\n                </div>\n                <header className=\"alogrithms\">\n                    <button onClick={() => this.changeAlgorithm(\"prims\")}>Prim's</button>\n                    <button onClick={() => this.changeAlgorithm(\"travelling_sales\")}>Travelling Salesperson</button>\n                    <div className=\"alogrithms-right\">\n                        <button onClick={() => {this.p5.randomNodes = true}}>Randomize</button>\n                        <button onClick={() => {this.p5.reset = true}}>Reset</button>\n                    </div>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default Graph","\nfunction* Bubble(arr) {\n    \n    var swapping;\n    do {\n        swapping = false;\n        for (let i=1; i<arr.length; i++) {\n            if (arr[i] > arr[i-1]) {\n                arr = swap(arr, i, i-1);\n                swapping =  true;\n                yield arr;\n            }\n        }\n    } while (swapping);\n}\n\nfunction swap(a, i, j) {\n    var t = a[i];\n    a[i] = a[j];\n    a[j] = t;\n    return a;\n}\n\n\n\n\nexport default Bubble;","\nfunction* QuickSort(arr, start, end) {\n    if (start >= end) {\n        return;\n    }\n    \n    let pivotIndex = partition(arr, start, end);\n    \n    for (let value of QuickSort(arr, start, pivotIndex-1)) {\n        yield value\n    }\n    for (let value of QuickSort(arr, pivotIndex+1, end)) {\n        yield value\n    }\n    yield arr;\n}\n\n\n\nfunction swap(arr, index1, index2) {\n    var t = arr[index1];\n    arr[index1] = arr[index2];\n    arr[index2] = t;\n    return arr;\n}\n\nfunction partition(arr, start, end) {\n    var pivotIndex = start;\n    var pivotValue = arr[end];\n    for (let i = start; i < end; i++) {\n        if (arr[i] < pivotValue) {\n            arr = swap(arr, i, pivotIndex);\n            pivotIndex++;\n        }\n    }\n    arr = swap(arr, pivotIndex, end);\n    return pivotIndex;\n}\n\nexport default QuickSort;","\nfunction* Merge(arr) {\n    if (arr.length === 1) {\n        yield arr;\n        return;\n    }\n\n    var mid_index = Math.floor(arr.length/2);\n\n    var leftGen = [...Merge([...arr].splice(0, mid_index))];\n    var rightGen = [...Merge([...arr].splice(mid_index))];\n\n    var left, right;\n\n    for (let i=0; i<Math.max(leftGen.length, rightGen.length); i++) {\n        left = leftGen[Math.min(i, leftGen.length-1)];\n        right = rightGen[Math.min(i, rightGen.length-1)];\n        yield left.concat(right);\n    }\n\n    var result = [];\n    while (left.length > 0 && right.length > 0) {\n        if (left[0] < right[0]) {\n            result.push(left.shift());\n        } else {\n            result.push(right.shift());\n        }\n    }\n\n    result = result.concat(left);\n    result = result.concat(right);\n    yield result;\n}\n\nexport default Merge;","import { Bubble, QuickSort, Merge } from \"../sorting\"\n\nconst SortingAlgorithm = p => {\n\n    const change = 10;\n\tconst minY = p.windowHeight * 0.12;\n    const maxY = p.windowHeight * 0.89;\n    const widthMargin = p.windowWidth * 0.1\n    const width = p.windowWidth - widthMargin * 2;\n    p.speed = 0.125;\n    let count = 0;\n    const defaultValue = 100;\n    var arr = createRandomArray(defaultValue);\n    \n    var algorithm_in_process;\n  \n    p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        execute();\n    }\n  \n    p.draw = () => {\n\t\tp.background(0);\n\n\t\tif (p.reset) {\n            arr = createRandomArray(defaultValue);\n            algorithm_in_process = null;\n\t\t\tp.reset = false;\n\t\t}\n\n\t\tif (p.largerArray) {\n            arr = createRandomArray(arr.length+change);\n            algorithm_in_process = null;\n\t\t\tp.largerArray = false;\n        }\n        if (p.smallerArray) {\n            arr = createRandomArray(Math.max(40, arr.length-change));\n            algorithm_in_process = null;\n\t\t\tp.smallerArray = false;\n        }\n\n        if (p.refresh) {\n            if (algorithm_in_process != null) {\n                arr = createRandomArray(arr.length);\n            }\n            execute();\n            p.refresh = false;\n        }\n        \n        var scale = width/arr.length\n        p.strokeWeight(scale);\n        p.stroke(255);\n        for (let i=0; i<arr.length; i++) {\n            var x = i*scale+widthMargin;\n            p.line(x, arr[i]+minY, x, maxY);\n        }\n\n        var temp;\n        if (algorithm_in_process != null) {\n\n            count += p.speed\n            while (count>=1) {\n                temp = algorithm_in_process.next().value;\n                if (temp != null) {\n                    arr = temp;\n                } else {\n                    algorithm_in_process = null;\n                    break;\n                }\n                count--;\n            }\n\n\n        }\n\n\n    }\n    \n    function createRandomArray(size) {\n        arr = [];\n        for (let i=0; i<size; i++) {\n            arr.push(Math.floor(Math.random() * (maxY-minY)));\n        }\n        return arr;\n    }\n\n\tconst execute = () => {\n\n\t\tif (p.algorithm === \"bubble\") {\n\t\t\talgorithm_in_process = Bubble(arr);\n        } else if (p.algorithm === \"quicksort\") {\n            algorithm_in_process = QuickSort(arr, 0, arr.length-1);\n        } else if (p.algorithm === \"merge\") {\n            algorithm_in_process = Merge(arr);\n        }\n\n\t}\n}\n\nexport default SortingAlgorithm;","import React from \"react\";\nimport p5 from \"p5\";\n\nimport \"./algorithm_selection.css\";\n\nimport SortingAlgorithm from \"../algorithms/sorting/main\"\n\nclass Sort extends React.Component {\n    constructor(props) {\n        super(props);\n        this.sort_sketch = React.createRef();\n    }\n\n    componentDidMount() {\n        this.p5 = new p5(SortingAlgorithm, this.sort_sketch.current);\n        this.p5.algorithm = null;\n    }\n\n    changeAlgorithm(algorithm) {\n        this.p5.refresh = true;\n        this.p5.algorithm = algorithm;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"sketch\" ref={this.sort_sketch}>\n                </div>\n                <header className=\"alogrithms\">\n                    <button onClick={() => this.changeAlgorithm(\"bubble\")}>Bubble Sort</button>\n                    <button onClick={() => this.changeAlgorithm(\"quicksort\")}>Quick Sort</button>\n                    <button onClick={() => this.changeAlgorithm(\"merge\")}>Merge Sort</button>\n                    <div className=\"alogrithms-right\">\n                        <button onClick={() => {this.p5.speed = this.p5.speed * 2}}>x2</button>\n                        <button onClick={() => {this.p5.speed = Math.max(0.01, this.p5.speed * 0.5)}}>x.5</button>\n                        <button onClick={() => {this.p5.smallerArray = true}}>Shrink</button>\n                        <button onClick={() => {this.p5.largerArray = true}}>Grow</button>\n                        <button onClick={() => {this.p5.reset = true}}>Reset</button>\n                    </div>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default Sort;","function* Dijkstra(nodes, w, h) {\n    var queue = [];\n    for (let i=0; i<nodes.length; i++) {\n        queue.push(nodes[i]);\n    }\n    \n    var start = nodes.filter(node => node.start)[0];\n    var end = nodes.filter(node => node.end)[0];\n    start.dist = 0;\n    \n    while (queue.length > 0) {\n        var minNode = [...queue].sort((a, b) => a.dist - b.dist)[0];\n        if (minNode === end) { break; }\n        // eslint-disable-next-line\n        queue = queue.filter(node => node != minNode);\n        \n        for (let neighbour of getNeighbours(nodes, minNode, w, h)) {\n            var alt = minNode.dist + 1; //Non-weighted\n            if (alt < neighbour.dist) {\n                neighbour.dist = alt;\n                neighbour.previous = minNode;\n            }\n            yield nodes;\n        }\n    }\n    yield nodes;\n\n    var next = end;\n    while (next.previous !== undefined) {\n        next.path = true;\n        next = next.previous;\n        yield nodes;\n    }\n}\n\nfunction getNeighbours(nodes, node, w, h) {\n    const range = (x, y) => { return 0 <= x && x < w && 0 <= y && y < h; };\n    var neighbours = [[node.i+1, node.j], [node.i-1, node.j], [node.i, node.j+1], [node.i, node.j-1]];\n    return neighbours.filter(n => range(...n)).map(n => nodes[n[0]*h+n[1]]).filter(n => !n.wall);\n}\n\nexport default Dijkstra;","\n\nfunction* A_star(nodes, w, h) {\n\n    var openSet = nodes.filter(node => node.start);\n    openSet[0].inOpenSet = true;\n    var closedSet = [];\n    var end = nodes.filter(node => node.end)[0];\n\n    while (openSet.length > 0) {\n        \n        let winner = 0;\n        for (let i = 0; i < openSet.length; i++) {\n            if (openSet[i].f < openSet[winner].f) {\n                winner = i;\n            }\n        }\n\n        var current = openSet[winner];\n\n        if (current === end) {\n            var cell = current;\n            while (cell.previous) {\n                cell.path = true;\n                cell = cell.previous;\n            }\n            nodes = nodes.map(node => {\n                node.inOpenSet = false;\n                node.inClosedSet = false;\n                return node;\n            })\n            return nodes;\n        }\n        \n        // eslint-disable-next-line\n        openSet = openSet.filter(node => node !== current);\n        closedSet.push(current);\n        current.inOpenSet = false;\n        current.inClosedSet = true;\n\n        for (let neighbour of getNeighbours(nodes, current, w, h)) {\n\n            if (closedSet.includes(neighbour) || neighbour.wall) {\n                continue;\n            }\n\n            let tentative_g = current.g + 1;\n            if (openSet.includes(neighbour)) {\n                if (tentative_g < neighbour.g) {\n                    neighbour.g = tentative_g;\n                }\n            } else {\n                neighbour.g = tentative_g;\n                neighbour.inOpenSet = true;\n                openSet.push(neighbour)\n            }\n\n            const a = [neighbour.i, neighbour.j];\n            const b = [end.i, end.j];\n\n            neighbour.h = heuristic(a, b);\n\n            neighbour.f = neighbour.g + neighbour.h;\n\n            neighbour.previous = current;\n            // eslint-disable-next-line\n            yield openSet.concat(closedSet).concat(nodes.filter(node => !openSet.includes(node) && !closedSet.includes(node))).sort((a, b) => {\n                return (a.j + a.i/1000) - (b.j+b.i/1000);\n            });\n        }\n\n    }\n    return null;\n    \n}\n\nfunction heuristic(a,b) {\n    let x = a[0] - b[0];\n    let y = a[1] - b[1];\n    return Math.pow(x*x + y*y, 0.5)\n}\n\nfunction getNeighbours(nodes, node, w, h) {\n    const range = (x, y) => { return 0 <= x && x < w && 0 <= y && y < h; };\n    var neighbours = [[node.i+1, node.j], [node.i-1, node.j], [node.i, node.j+1], [node.i, node.j-1]];\n    return neighbours.filter(n => range(...n)).map(n => nodes[n[0]*h+n[1]]).filter(n => !n.wall);\n}\n\nexport default A_star;","import { Dijkstra, A_star } from \"../pathfinding\"\n\nconst PathfindingAlgorithm = p => {\n\n\tvar nodes = [];\n\tconst minY = p.windowHeight * 0.09;\n    const maxY = p.windowHeight * 0.89;\n    const widthMargin = p.windowWidth * 0.05\n    const width = p.windowWidth - widthMargin * 2;\n    \n    const k = 30;\n    const w = Math.floor(p.windowWidth/k);\n    const h = Math.floor(p.windowHeight/k);\n\n    var w_offset, h_offset;\n\n    var lastNode = null;\n\n    p.speed = 30;\n    let count = 0;\n    var algorithm_in_process = null;\n\n\n    p.setup = () => {\n\t\tp.createCanvas(p.windowWidth, p.windowHeight);\n        w_offset = width/w;\n        h_offset = (maxY-minY)/h;\n        reset_nodes();\n        p.textFont(\"Helvetica\");\n        p.textSize(10);\n        p.textAlign(p.CENTER, p.CENTER)\n    }\n  \n    p.draw = () => {\n\t\tp.background(0);\n\n\t\tif (p.reset) {\n            nodes = reset_nodes();\n            p.algorithm = null;\n            execute();\n\t\t\tp.reset = false;\n\t\t}\n\n\t\tif (p.randomMap) {\n\t\t\tp.randomMap = false;\n        }\n\n        if (p.refresh) {\n            execute();\n            p.refresh = false;\n        }\n\n        \n        if (algorithm_in_process != null) {\n            var temp;\n            count += p.speed\n            while (count>=1) {\n                temp = algorithm_in_process.next().value;\n                if (temp != null) {\n                    nodes = temp;\n                } else {\n                    algorithm_in_process = null;\n                    break;\n                }\n                count--;\n            }\n\n        }\n        \n        for (let node of nodes) {\n            \n            p.fill(p.color(\"black\"));\n            if (node.wall) {\n                p.fill(p.color(\"white\"));\n            } else if (node.start) {\n                p.fill(p.color(\"green\"));\n            } else if (node.end) {\n                p.fill(p.color(\"red\"));\n            } else if (node.path) {\n                p.fill(p.color(\"blue\"));\n            } else if (p.algorithm === \"a_star\") {\n                if (node.inOpenSet) {\n                    p.fill(p.color(\"green\"));\n                } else if (node.inClosedSet) {\n                    p.fill(p.color(\"red\"));\n                }\n            }\n        \n            p.rect(node.x+widthMargin, node.y+minY, w_offset, h_offset);\n            if (p.algorithm === \"dijkstra\" && node.dist !== 100000) {\n                p.fill(255);\n                p.text(node.dist, node.x+widthMargin+w_offset/2, node.y+minY+h_offset/2)\n            }\n        }\n                \n    }\n    \n    const reset_nodes = () => {\n        nodes = [];\n        for (let i=0; i<w; i++) {\n          for (let j=0; j<h; j++) {\n            nodes.push(Node(i, j, to_pixels(i, w, width), to_pixels(j, h, maxY-minY)));\n          }\n        }\n        nodes[Math.floor(w*0.2)*h+Math.floor(h*0.5)].start = true;\n        nodes[Math.floor(w*0.8)*h+Math.floor(h*0.5)].end = true;\n\n        return nodes;\n    }\n\n\tp.mouseClicked = () => {\n\t\tvar node = getNodeByPixels(p.mouseX-w_offset, p.mouseY-h_offset);\n        if (node === undefined || node.start || node.end) { return; }\n        node.wall = !node.wall;\n        lastNode = node;\n    }\n    \n    p.mouseDragged = () => {\n        var node = getNodeByPixels(p.mouseX-w_offset, p.mouseY-h_offset);\n        if (node === undefined || node.start || node.end) { return; }\n        if (node !== lastNode) {\n            node.wall = !node.wall;\n            lastNode = node;\n        }\n    }\n\n    const getNodeByPixels = (x, y) => nodes.filter(node => x-widthMargin <= node.x && node.x < x-widthMargin+w_offset && y-minY <= node.y && node.y < y-minY+h_offset)[0];\n\n    const to_pixels = (x, maxX, max) => x/maxX * max;\n\n\n\tconst execute = () => {\n\n\t\tif (p.algorithm === \"dijkstra\") {\n\t\t\talgorithm_in_process = Dijkstra(nodes, w, h);\n        } else if (p.algorithm === \"a_star\") {\n            algorithm_in_process = A_star(nodes, w, h);\n        } else {\n            algorithm_in_process = null;\n        }\n\n\t}\n}\n\nconst Node = (i, j, x, y) => {\n    return {\n        i: i,\n        j: j,\n        x: x,\n        y: y,\n\n        wall: false,\n        start: false,\n        end: false,\n\n        visited: false,\n        path: false,\n        previous: false,\n        dist: 100000,\n\n        g: 0,\n        h: 0,\n        f: 0,\n        inOpenSet: false,\n        inClosedSet: false,\n    }\n}\n\nexport default PathfindingAlgorithm;","import React from \"react\";\nimport p5 from \"p5\";\n\nimport \"./algorithm_selection.css\";\n\nimport PathfindingAlgorithm from \"../algorithms/pathfinding/main\"\n\nclass Pathfinding extends React.Component {\n    constructor(props) {\n        super(props);\n        this.pathfinding_sketch = React.createRef();\n    }\n\n    componentDidMount() {\n        this.p5 = new p5(PathfindingAlgorithm, this.pathfinding_sketch.current);\n        this.p5.algorithm = null;\n    }\n\n    changeAlgorithm(algorithm) {\n        this.p5.refresh = true;\n        this.p5.algorithm = algorithm;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"sketch\" ref={this.pathfinding_sketch}>\n                </div>\n                <header className=\"alogrithms\">\n                    <button onClick={() => this.changeAlgorithm(\"dijkstra\")}>Dijkstra</button>\n                    <button onClick={() => this.changeAlgorithm(\"a_star\")}>A*</button>\n                    <div className=\"alogrithms-right\">\n                        <button onClick={() => {this.p5.speed = this.p5.speed * 2}}>x2</button>\n                        <button onClick={() => {this.p5.speed = Math.max(1, this.p5.speed * 0.5)}}>x.5</button>\n                        <button onClick={() => {this.p5.reset = true}}>Reset</button>\n                    </div>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default Pathfinding;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport './App.css';\n\nimport { Navbar, Home, Graph, Sort, Pathfinding } from \"./components\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/sorting_algorithms\" component={() => <Sort />} />\n\t\t\t\t\t<Route path=\"/graph_algorithms\" component={() => <Graph />} />\n\t\t\t\t\t<Route path=\"/pathfinding_algorithms\" component={() => <Pathfinding />} />\n\t\t\t\t\t<Route exact path=\"/\" component={() => <Home />} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}